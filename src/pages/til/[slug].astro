---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

// Prerender this page at build time
export const prerender = true;

// Get all TIL posts from content collection
export async function getStaticPaths() {
  const tilPosts = await getCollection('til');
  
  return tilPosts.map(post => ({
    params: { slug: post.slug },
    props: { post }
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
---

<Layout title={`${post.data.title} - TIL - DevNotes`}>
  <div class="container-responsive py-8 sm:py-12">
    <div class="max-w-4xl mx-auto">
      <!-- Breadcrumb -->
      <nav class="mb-8" aria-label="Breadcrumb">
        <ol class="flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400">
          <li><a href="/" class="hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-200">Home</a></li>
          <li><span class="mx-2">/</span></li>
          <li><a href="/til" class="hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-200">TIL</a></li>
          <li><span class="mx-2">/</span></li>
          <li class="text-gray-900 dark:text-white font-medium">{post.data.title}</li>
        </ol>
      </nav>

      <!-- TIL Post Header -->
      <article class="mb-12">
        <header class="mb-8 sm:mb-12">
          <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6">
            <span class="text-sm text-gray-500 dark:text-gray-400">{post.data.date}</span>
            <span class="tag">{post.data.category}</span>
          </div>
          
          <h1 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-gray-900 dark:text-white mb-6 leading-tight">
            {post.data.title}
          </h1>
          
          {post.data.description && (
            <p class="text-lg sm:text-xl text-gray-600 dark:text-gray-300 mb-8 leading-relaxed">
              {post.data.description}
            </p>
          )}
          
          <!-- Tags -->
          <div class="flex flex-wrap gap-2 mb-8">
            {post.data.tags.map((tag: string) => (
              <span class="tag">{tag}</span>
            ))}
          </div>
          
          <!-- View Count -->
          <div class="flex items-center gap-1 text-sm text-gray-600 dark:text-gray-400 mb-8">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
            </svg>
            <span id="view-count">0</span> views
          </div>
        </header>

        <!-- TIL Content -->
        <div class="prose-custom">
          <Content />
        </div>
      </article>

      <!-- Navigation -->
      <div class="border-t border-gray-200 dark:border-gray-700 pt-8 sm:pt-12">
        <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
          <a href="/til" class="text-primary-600 hover:text-primary-700 dark:text-primary-400 dark:hover:text-primary-300 font-medium transition-colors duration-200 flex items-center gap-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
            Back to All TIL Posts
          </a>
          <div class="flex gap-4">
            <a href="/notes" class="text-primary-600 hover:text-primary-700 dark:text-primary-400 dark:hover:text-primary-300 font-medium transition-colors duration-200 flex items-center gap-2">
              View Notes
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  // View count functionality
  document.addEventListener('DOMContentLoaded', function() {
    const viewCountElement = document.getElementById('view-count');
    if (!viewCountElement) return;

    // Get current view count from localStorage
    const postSlug = window.location.pathname.split('/').pop();
    const storageKey = `view-count-${postSlug}`;
    let currentCount = parseInt(localStorage.getItem(storageKey) || '0');
    
    // Increment view count
    currentCount++;
    localStorage.setItem(storageKey, currentCount.toString());
    
    // Update display
    viewCountElement.textContent = currentCount.toString();
  });
</script>
